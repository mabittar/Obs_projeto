{
	"nodes":[
		{"id":"a956b2c92992544a","x":-433,"y":-340,"width":353,"height":272,"color":"6","type":"text","text":"**Análise de Contexto**\n\nO valor histórico da cota dos fundos de investimentos cadastrados na CVM ficam disponível para cosulta via site próprio\nhttps://cvmweb.cvm.gov.br/swb/default.asp?sg_sistema=fundosreg"},
		{"id":"c02c7f6608a11754","x":-60,"y":-340,"width":294,"height":160,"color":"6","type":"text","text":"**Personas**\n\n- cliente que deseja o valor\n- desenvolvedor\n- CVM"},
		{"id":"70a27615ec53fbe9","x":-60,"y":-160,"width":294,"height":577,"color":"6","type":"text","text":"**Hipóteses**\n\n- facilitar o acesso aos dados\n- tornar a consulta mais eficiente\n- implementar um sistema responsivo\n- implementar um sistema mais amigável\n- facilitar o escalonamento das soluções.\n- utilizar o design pattern Storage-first para armazenar as requests de solicitação de dados para rastreabilidade e cobrança.\n- utilizar o design pattern circuit breaker, caso o sistema da CVM esteja fora do ar evitar novas chamadas"},
		{"id":"c20dd1aa925272da","x":-433,"y":277,"width":353,"height":1052,"color":"4","type":"text","text":"**Objetivo (SMART)**\n\n"},
		{"id":"9de8cca94bf99dea","x":-60,"y":457,"width":294,"height":872,"color":"4","type":"text","text":"**Premissas e Restrições**\n\n- Site da CVM limita o número de acessos por IP (scrapper)\n- Solução deve ter alta disponibilidlade\n- a princípio a consulta será apenas pelo CNPJ do fundo\n- devido a lentidão do site onde as informações estão armazenadas o processo será assíncrono\n- Utlizar design pattern de mensageria para facilitar o escalonamento da solução que coleta os dados no site externo\n- Uma API REST será o ponto de entrada para o backend\n- Criar containers para facilitar deploys e compatibilidade em ambiente cloud.\n"},
		{"id":"170df814f3d4e434","x":264,"y":-340,"width":294,"height":1669,"color":"4","type":"text","text":"**BACKLOG**\n\n- criar API REST como ponto de entrada para backend\n- criar endpoint para \n- identificar qual fundo está sendo solicitado pelo usuário\n- iidentificar quais datas os usuário está solicitando os dados\n- verificar se os dados já estão no banco de dados\n- verificiar quais meses serão lidos no site da CVM\n- criar fila  e tópico para mensageria\n- criar lógica para destacar quais mensagens foram processdas (acked) e quais estão pendentes (unacked)\n- para cada mês publicar a mensagem na fila\n- atualizar ou coletar novos dados do site da CVM\n- validar os dados recebidos\n- organizar os dados recebidos em TimeSeries\n- armazenar os dados classifiicados\n- desenvolver front de forma a plotar os gráficos de forma iterativa por fundo (ou mais de um fundo)\n- consumir outras métricas de mercado de forma a comparar o valor de evolução das cotas de fundo\n- habilitar endpoint para calcular retorno no período e outros índices financeiros\n- criar containers (Dockerfiles)\n- criar docker-compose \n- notificar o usuário quando os dados estiverem disponíveis"},
		{"id":"b59e54ae0ab23f08","x":587,"y":-340,"width":826,"height":1669,"color":"5","type":"text","text":"**Experimentação**\n\nUtilizar o REDIS e demais features como solução única\n\nREDIS TIMESERIES\nO RedisTimeSeries é um módulo Redis que adiciona uma estrutura de dados em série cronológica ao Redis. Ele permite inserções de alto volume junto com leituras de baixa latência. Os dados das séries cronológicas naturalmente têm o tempo como parâmetro principal de consulta. Com base nisto, podemos ter vários tipos de consultas agregadas. Uma forma adequada para armazenamento dos dados após leitura da fonte (CVM) e tratamento (trasformação).\n\nREDIS PUB/SUB\nEm um Pub/Sub, a fonte do evento apenas \"Publica\" (publish) o evento para uma fila. Tal evento é temporário. Ele se perde imediatamente após a sua criação - a menos que seja captado por um \"Assinante\" (subscriber). Poderíamos ter vários assinantes esperando por eventos de qualquer \"publisher\". Tal comunicação é útil quando o momento do evento em si é tão importante quanto os dados que ele carrega.\n\nObserve aqui que o assinante não se importa com quem publicou o evento e a editora não se importa com quem assina o evento. Ambos trabalham independentemente, levando a um desacoplamento perfeito. Entretanto, se por algum motivo, não houver assinante ativo quando o evento for publicado, esse evento será perdido e não poderá ser recuperado.\n\nA sintaxe do Pub/sub é muito simples. Podemos assinar um canal usando o comando SUBSCRIBE e depois publicar para esse canal usando o PUBLICIDADE. \n\nREDIS STREAM\nO stream por outro lado, é mais permanente. A \"fonte do evento\" acrescenta continuamente os eventos a um \"fluxo de eventos\". Outro serviço que está interessado nestes eventos pode \"ouvir\" este fluxo e \"consumir\" os eventos no fluxo. Os eventos no fluxo são \"persistidos\" por um tempo configurado no sistema. Isto proporciona um sistema robusto onde os ouvintes podem consumir os eventos em seu próprio ritmo.\n\nO streaming é melhor que o pub/sub? Não é necessário! O Streaming é mais robusto, com certeza. No entanto, implica em uma sobrecarga que pode não ser necessária. O Pub/Sub é leve e mais apto para a exigência às vezes. Qualquer um dos padrões tem seu próprio valor, e é tarefa do arquiteto identificar e implementar o padrão apropriado no caso de uso em questão."},
		{"id":"19414ec4b0055aac","x":-433,"y":-35,"width":353,"height":287,"color":"6","type":"text","text":"**Benefícios e Justifiicatiivas**\n\nDevido a baixa usabilidade do site a consulta de um dado histórico é complexa e demanda muitos cliques, conseguir valores para meses diferentes envolve ainda mais iterações do usuário (+ cliques)"},
		{"id":"df6e28225ec94a3c","x":-460,"y":-370,"width":1912,"height":1741,"type":"group","label":"CANVAS DO PROJETO"},
		{"id":"bfedfd07b6a3b7af","x":-411,"y":333,"width":309,"height":168,"color":"3","type":"text","text":"**Específico**\nDiminuir o numero de iterações que um usário precisa fazer para consultar valores para multiiplas datas"},
		{"id":"2227b465e9b9aa0f","x":-411,"y":526,"width":309,"height":262,"color":"3","type":"text","text":"**Mensurável**\nAtualmente o usuário precisa navegar por 6 páginas, realizar 8 cliques e buscar na planilha a data desejada, caso deseje outra data precisa refazer o processo. O usuário precisará informar o CNPJ e data e aguardar o resultado, apenas pela primeira vez."},
		{"id":"0cdce9f138374450","x":-411,"y":813,"width":309,"height":163,"color":"3","type":"text","text":"**Atingível**\nDesenvolver um serviço que busque os dados históricos e armazene para futuras consultas"},
		{"id":"c45204521ba4fc52","x":-411,"y":1000,"width":309,"height":148,"color":"3","type":"text","text":"**Relevante**\nCom os dados armazenados em séries temporaiis, novas projeções poderão ser automatizadas\n"},
		{"id":"7b9c940533cccd4e","x":-411,"y":1173,"width":309,"height":122,"color":"3","type":"text","text":"**Temporal**\n\nO desenvolvimento irá demandar 8 sprints"}
	],
	"edges":[]
}